/****************************************************************************
** Meta object code from reading C++ file 'tst_conversionstest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.8.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_conversionstest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.8.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_ConversionsTest_t {
    QByteArrayData data[16];
    char stringdata0[198];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ConversionsTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ConversionsTest_t qt_meta_stringdata_ConversionsTest = {
    {
QT_MOC_LITERAL(0, 0, 15), // "ConversionsTest"
QT_MOC_LITERAL(1, 16, 5), // "ss2tf"
QT_MOC_LITERAL(2, 22, 0), // ""
QT_MOC_LITERAL(3, 23, 9), // "ss2tfSISO"
QT_MOC_LITERAL(4, 33, 6), // "arx2tf"
QT_MOC_LITERAL(5, 40, 6), // "arx2SS"
QT_MOC_LITERAL(6, 47, 5), // "tf2ss"
QT_MOC_LITERAL(7, 53, 9), // "tf2ssSISO"
QT_MOC_LITERAL(8, 63, 10), // "tf2arxSISO"
QT_MOC_LITERAL(9, 74, 8), // "c2dCase1"
QT_MOC_LITERAL(10, 83, 8), // "c2dCase2"
QT_MOC_LITERAL(11, 92, 3), // "d2c"
QT_MOC_LITERAL(12, 96, 24), // "integrativeModelDiscrete"
QT_MOC_LITERAL(13, 121, 26), // "integrativeModelContinuous"
QT_MOC_LITERAL(14, 148, 23), // "predictionModelDiscrete"
QT_MOC_LITERAL(15, 172, 25) // "predictionModelContinuous"

    },
    "ConversionsTest\0ss2tf\0\0ss2tfSISO\0"
    "arx2tf\0arx2SS\0tf2ss\0tf2ssSISO\0tf2arxSISO\0"
    "c2dCase1\0c2dCase2\0d2c\0integrativeModelDiscrete\0"
    "integrativeModelContinuous\0"
    "predictionModelDiscrete\0"
    "predictionModelContinuous"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ConversionsTest[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      14,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   84,    2, 0x08 /* Private */,
       3,    0,   85,    2, 0x08 /* Private */,
       4,    0,   86,    2, 0x08 /* Private */,
       5,    0,   87,    2, 0x08 /* Private */,
       6,    0,   88,    2, 0x08 /* Private */,
       7,    0,   89,    2, 0x08 /* Private */,
       8,    0,   90,    2, 0x08 /* Private */,
       9,    0,   91,    2, 0x08 /* Private */,
      10,    0,   92,    2, 0x08 /* Private */,
      11,    0,   93,    2, 0x08 /* Private */,
      12,    0,   94,    2, 0x08 /* Private */,
      13,    0,   95,    2, 0x08 /* Private */,
      14,    0,   96,    2, 0x08 /* Private */,
      15,    0,   97,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void ConversionsTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        ConversionsTest *_t = static_cast<ConversionsTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->ss2tf(); break;
        case 1: _t->ss2tfSISO(); break;
        case 2: _t->arx2tf(); break;
        case 3: _t->arx2SS(); break;
        case 4: _t->tf2ss(); break;
        case 5: _t->tf2ssSISO(); break;
        case 6: _t->tf2arxSISO(); break;
        case 7: _t->c2dCase1(); break;
        case 8: _t->c2dCase2(); break;
        case 9: _t->d2c(); break;
        case 10: _t->integrativeModelDiscrete(); break;
        case 11: _t->integrativeModelContinuous(); break;
        case 12: _t->predictionModelDiscrete(); break;
        case 13: _t->predictionModelContinuous(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject ConversionsTest::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_ConversionsTest.data,
      qt_meta_data_ConversionsTest,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *ConversionsTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ConversionsTest::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_ConversionsTest.stringdata0))
        return static_cast<void*>(const_cast< ConversionsTest*>(this));
    return QObject::qt_metacast(_clname);
}

int ConversionsTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 14)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 14;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 14)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 14;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
