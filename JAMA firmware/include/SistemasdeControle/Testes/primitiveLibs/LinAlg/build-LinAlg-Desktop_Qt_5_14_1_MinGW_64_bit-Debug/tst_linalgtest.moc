/****************************************************************************
** Meta object code from reading C++ file 'tst_linalgtest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.14.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_linalgtest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.14.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_LinAlgTest_t {
    QByteArrayData data[27];
    char stringdata0[462];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_LinAlgTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_LinAlgTest_t qt_meta_stringdata_LinAlgTest = {
    {
QT_MOC_LITERAL(0, 0, 10), // "LinAlgTest"
QT_MOC_LITERAL(1, 11, 11), // "traceDouble"
QT_MOC_LITERAL(2, 23, 0), // ""
QT_MOC_LITERAL(3, 24, 15), // "HessDoubleCase1"
QT_MOC_LITERAL(4, 40, 15), // "HessDoubleCase2"
QT_MOC_LITERAL(5, 56, 19), // "HessFormDoubleCase1"
QT_MOC_LITERAL(6, 76, 19), // "HessFormDoubleCase2"
QT_MOC_LITERAL(7, 96, 42), // "QR_Factorization_ModifiedGram..."
QT_MOC_LITERAL(8, 139, 22), // "QR_FactorizationDouble"
QT_MOC_LITERAL(9, 162, 8), // "QRDouble"
QT_MOC_LITERAL(10, 171, 22), // "LU_FactorizationDouble"
QT_MOC_LITERAL(11, 194, 13), // "balanceDouble"
QT_MOC_LITERAL(12, 208, 17), // "eigenValuesDouble"
QT_MOC_LITERAL(13, 226, 22), // "eigenValuesDoubleCase2"
QT_MOC_LITERAL(14, 249, 18), // "eigenVectorsDouble"
QT_MOC_LITERAL(15, 268, 20), // "eigenValues_LUDouble"
QT_MOC_LITERAL(16, 289, 17), // "inv_numericDouble"
QT_MOC_LITERAL(17, 307, 26), // "caracteristicPolynomDouble"
QT_MOC_LITERAL(18, 334, 14), // "multPolyDouble"
QT_MOC_LITERAL(19, 349, 9), // "absDouble"
QT_MOC_LITERAL(20, 359, 16), // "sqrtMatrixDouble"
QT_MOC_LITERAL(21, 376, 15), // "powMatrixDouble"
QT_MOC_LITERAL(22, 392, 15), // "meanDoubleCase1"
QT_MOC_LITERAL(23, 408, 15), // "meanDoubleCase2"
QT_MOC_LITERAL(24, 424, 15), // "meanDoubleCase3"
QT_MOC_LITERAL(25, 440, 10), // "expMDouble"
QT_MOC_LITERAL(26, 451, 10) // "logMDouble"

    },
    "LinAlgTest\0traceDouble\0\0HessDoubleCase1\0"
    "HessDoubleCase2\0HessFormDoubleCase1\0"
    "HessFormDoubleCase2\0"
    "QR_Factorization_ModifiedGramSchmidtDouble\0"
    "QR_FactorizationDouble\0QRDouble\0"
    "LU_FactorizationDouble\0balanceDouble\0"
    "eigenValuesDouble\0eigenValuesDoubleCase2\0"
    "eigenVectorsDouble\0eigenValues_LUDouble\0"
    "inv_numericDouble\0caracteristicPolynomDouble\0"
    "multPolyDouble\0absDouble\0sqrtMatrixDouble\0"
    "powMatrixDouble\0meanDoubleCase1\0"
    "meanDoubleCase2\0meanDoubleCase3\0"
    "expMDouble\0logMDouble"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_LinAlgTest[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      25,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  139,    2, 0x08 /* Private */,
       3,    0,  140,    2, 0x08 /* Private */,
       4,    0,  141,    2, 0x08 /* Private */,
       5,    0,  142,    2, 0x08 /* Private */,
       6,    0,  143,    2, 0x08 /* Private */,
       7,    0,  144,    2, 0x08 /* Private */,
       8,    0,  145,    2, 0x08 /* Private */,
       9,    0,  146,    2, 0x08 /* Private */,
      10,    0,  147,    2, 0x08 /* Private */,
      11,    0,  148,    2, 0x08 /* Private */,
      12,    0,  149,    2, 0x08 /* Private */,
      13,    0,  150,    2, 0x08 /* Private */,
      14,    0,  151,    2, 0x08 /* Private */,
      15,    0,  152,    2, 0x08 /* Private */,
      16,    0,  153,    2, 0x08 /* Private */,
      17,    0,  154,    2, 0x08 /* Private */,
      18,    0,  155,    2, 0x08 /* Private */,
      19,    0,  156,    2, 0x08 /* Private */,
      20,    0,  157,    2, 0x08 /* Private */,
      21,    0,  158,    2, 0x08 /* Private */,
      22,    0,  159,    2, 0x08 /* Private */,
      23,    0,  160,    2, 0x08 /* Private */,
      24,    0,  161,    2, 0x08 /* Private */,
      25,    0,  162,    2, 0x08 /* Private */,
      26,    0,  163,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void LinAlgTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<LinAlgTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->traceDouble(); break;
        case 1: _t->HessDoubleCase1(); break;
        case 2: _t->HessDoubleCase2(); break;
        case 3: _t->HessFormDoubleCase1(); break;
        case 4: _t->HessFormDoubleCase2(); break;
        case 5: _t->QR_Factorization_ModifiedGramSchmidtDouble(); break;
        case 6: _t->QR_FactorizationDouble(); break;
        case 7: _t->QRDouble(); break;
        case 8: _t->LU_FactorizationDouble(); break;
        case 9: _t->balanceDouble(); break;
        case 10: _t->eigenValuesDouble(); break;
        case 11: _t->eigenValuesDoubleCase2(); break;
        case 12: _t->eigenVectorsDouble(); break;
        case 13: _t->eigenValues_LUDouble(); break;
        case 14: _t->inv_numericDouble(); break;
        case 15: _t->caracteristicPolynomDouble(); break;
        case 16: _t->multPolyDouble(); break;
        case 17: _t->absDouble(); break;
        case 18: _t->sqrtMatrixDouble(); break;
        case 19: _t->powMatrixDouble(); break;
        case 20: _t->meanDoubleCase1(); break;
        case 21: _t->meanDoubleCase2(); break;
        case 22: _t->meanDoubleCase3(); break;
        case 23: _t->expMDouble(); break;
        case 24: _t->logMDouble(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

QT_INIT_METAOBJECT const QMetaObject LinAlgTest::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_LinAlgTest.data,
    qt_meta_data_LinAlgTest,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *LinAlgTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *LinAlgTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_LinAlgTest.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int LinAlgTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 25)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 25;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 25)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 25;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
